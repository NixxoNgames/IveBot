# THIS FILE HAS BEEN AUTO-GENERATED BY "PRISMA DEPLOY"
# DO NOT EDIT THIS FILE DIRECTLY


#
# Other Types
#

type AggregateWarningDiscord {
  count: Int!
}

type BatchPayload {
  count: Long!
}

scalar Long

type Mutation {
  createWarningDiscord(data: WarningDiscordCreateInput!): WarningDiscord!
  updateManyWarningDiscords(data: WarningDiscordUpdateInput!, where: WarningDiscordWhereInput!): BatchPayload!
  deleteManyWarningDiscords(where: WarningDiscordWhereInput!): BatchPayload!
}

enum MutationType {
  CREATED
  UPDATED
  DELETED
}

interface Node {
  id: ID!
}

type PageInfo {
  hasNextPage: Boolean!
  hasPreviousPage: Boolean!
  startCursor: String
  endCursor: String
}

type Query {
  warningDiscords(where: WarningDiscordWhereInput, orderBy: WarningDiscordOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [WarningDiscord]!
  warningDiscordsConnection(where: WarningDiscordWhereInput, orderBy: WarningDiscordOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): WarningDiscordConnection!
  node(id: ID!): Node
}

type Subscription {
  warningDiscord(where: WarningDiscordSubscriptionWhereInput): WarningDiscordSubscriptionPayload
}

type WarningDiscord {
  warnedId: String!
  warnerId: String!
  reason: String
  date: Int!
}

type WarningDiscordConnection {
  pageInfo: PageInfo!
  edges: [WarningDiscordEdge]!
  aggregate: AggregateWarningDiscord!
}

input WarningDiscordCreateInput {
  warnedId: String!
  warnerId: String!
  reason: String
  date: Int!
}

type WarningDiscordEdge {
  node: WarningDiscord!
  cursor: String!
}

enum WarningDiscordOrderByInput {
  warnedId_ASC
  warnedId_DESC
  warnerId_ASC
  warnerId_DESC
  reason_ASC
  reason_DESC
  date_ASC
  date_DESC
  id_ASC
  id_DESC
  updatedAt_ASC
  updatedAt_DESC
  createdAt_ASC
  createdAt_DESC
}

type WarningDiscordPreviousValues {
  warnedId: String!
  warnerId: String!
  reason: String
  date: Int!
}

type WarningDiscordSubscriptionPayload {
  mutation: MutationType!
  node: WarningDiscord
  updatedFields: [String!]
  previousValues: WarningDiscordPreviousValues
}

input WarningDiscordSubscriptionWhereInput {
  AND: [WarningDiscordSubscriptionWhereInput!]
  OR: [WarningDiscordSubscriptionWhereInput!]
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: WarningDiscordWhereInput
}

input WarningDiscordUpdateInput {
  warnedId: String
  warnerId: String
  reason: String
  date: Int
}

input WarningDiscordWhereInput {
  AND: [WarningDiscordWhereInput!]
  OR: [WarningDiscordWhereInput!]
  warnedId: String
  warnedId_not: String
  warnedId_in: [String!]
  warnedId_not_in: [String!]
  warnedId_lt: String
  warnedId_lte: String
  warnedId_gt: String
  warnedId_gte: String
  warnedId_contains: String
  warnedId_not_contains: String
  warnedId_starts_with: String
  warnedId_not_starts_with: String
  warnedId_ends_with: String
  warnedId_not_ends_with: String
  warnerId: String
  warnerId_not: String
  warnerId_in: [String!]
  warnerId_not_in: [String!]
  warnerId_lt: String
  warnerId_lte: String
  warnerId_gt: String
  warnerId_gte: String
  warnerId_contains: String
  warnerId_not_contains: String
  warnerId_starts_with: String
  warnerId_not_starts_with: String
  warnerId_ends_with: String
  warnerId_not_ends_with: String
  reason: String
  reason_not: String
  reason_in: [String!]
  reason_not_in: [String!]
  reason_lt: String
  reason_lte: String
  reason_gt: String
  reason_gte: String
  reason_contains: String
  reason_not_contains: String
  reason_starts_with: String
  reason_not_starts_with: String
  reason_ends_with: String
  reason_not_ends_with: String
  date: Int
  date_not: Int
  date_in: [Int!]
  date_not_in: [Int!]
  date_lt: Int
  date_lte: Int
  date_gt: Int
  date_gte: Int
}
