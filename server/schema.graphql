# A warn in Discord.
type WarningDiscord {
  # ID of the warned.
  warnedId: String!
  # ID of the warner.
  warnerId: String!
  # Reason for the warn.
  reason: String
  # Number since epoch for date.
  date: String!
}

# Server specific settings.
type ServerSetting {
  # Server ID.
  serverId: String!
  # If add role is enabled for everyone.
  addRoleForAll: Boolean
}

# Enable queries.
type Query {
  # We need to have allWarns to query for every warns in the database.
  allWarnsOfUser(userId: String!, serverId: String!): [WarningDiscord!]!
  # Query server settings.
  serverSettings(serverId: String!): [ServerSetting!]!
  # All server settings
  # allserverSettings(a: String): [ServerSetting!]!
}

# Enable mutations.
type Mutation {
  # Add a warn.
  warn(warnedId: String!, warnerId: String!, reason: String!, serverId: String!): WarningDiscord!
  # Clear warns.
  clearWarns(userId: String!, serverId: String!): [WarningDiscord]!
  # Remove a specific warn.
  removeWarn(userId: String!, id: String!, serverId: String!): WarningDiscord!
  # Edit server settings.
  editServerSettings(serverId: String!, addRoleForAll: Boolean): [ServerSetting!]!
  # Init server settings.
  initServerSettings(serverId: String!): ServerSetting!
}

schema {
  mutation: Mutation
  query: Query
}
